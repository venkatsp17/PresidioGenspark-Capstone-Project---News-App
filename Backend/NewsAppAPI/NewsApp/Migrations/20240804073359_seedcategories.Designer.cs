// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsApp.Contexts;

#nullable disable

namespace NewsApp.Migrations
{
    [DbContext(typeof(NewsAppDBContext))]
    [Migration("20240804073359_seedcategories")]
    partial class seedcategories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NewsApp.Models.Article", b =>
                {
                    b.Property<int>("ArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleID"), 1L, 1);

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("HashID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ImpScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OldHashID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaveCount")
                        .HasColumnType("int");

                    b.Property<int>("ShareCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArticleID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("NewsApp.Models.ArticleCategory", b =>
                {
                    b.Property<int>("ArticleID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ArticleID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("ArticleCategories");
                });

            modelBuilder.Entity("NewsApp.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Description = "Israel-Hamas_War",
                            Name = "Israel-Hamas War",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 2,
                            Description = "FINANCE",
                            Name = "Finance",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 3,
                            Description = "Russia-Ukraine_Conflict",
                            Name = "Russia-Ukraine Conflict",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 4,
                            Description = "EURO_2024",
                            Name = "EURO 2024",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 5,
                            Description = "EXPLAINERS",
                            Name = "Explainers",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 6,
                            Description = "LOK_SABHA_ELECTIONS",
                            Name = "Lok Sabha Elections",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 7,
                            Description = "T20_WORLD_CUP_2024",
                            Name = "T20 WORLD CUP 2024",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 8,
                            Description = "UNION_BUDGET",
                            Name = "Union Budget",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 9,
                            Description = "OLYMPICS_2024",
                            Name = "Olympics 2024",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 10,
                            Description = "national",
                            Name = "India",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 11,
                            Description = "business",
                            Name = "Business",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 12,
                            Description = "politics",
                            Name = "Politics",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 13,
                            Description = "sports",
                            Name = "Sports",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 14,
                            Description = "technology",
                            Name = "Technology",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 15,
                            Description = "startup",
                            Name = "Startups",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 16,
                            Description = "entertainment",
                            Name = "Entertainment",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 17,
                            Description = "hatke",
                            Name = "Hatke",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 18,
                            Description = "world",
                            Name = "International",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 19,
                            Description = "automobile",
                            Name = "Automobile",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 20,
                            Description = "science",
                            Name = "Science",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 21,
                            Description = "travel",
                            Name = "Travel",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 22,
                            Description = "miscellaneous",
                            Name = "Miscellaneous",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 23,
                            Description = "fashion",
                            Name = "Fashion",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 24,
                            Description = "education",
                            Name = "Education",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 25,
                            Description = "Health___Fitness",
                            Name = "Health & Fitness",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 26,
                            Description = "Lifestyle",
                            Name = "Lifestyle",
                            Type = "NEWS_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 27,
                            Description = "cricket",
                            Name = "Cricket",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 28,
                            Description = "topstories",
                            Name = "Top Stories",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 29,
                            Description = "city",
                            Name = "City",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 80,
                            Description = "experiment",
                            Name = "Experiment",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 81,
                            Description = "crime",
                            Name = "Crime",
                            Type = "CUSTOM_CATEGORY"
                        },
                        new
                        {
                            CategoryID = 82,
                            Description = "Feel_Good_Stories",
                            Name = "Feel_good_stories",
                            Type = "CUSTOM_CATEGORY"
                        });
                });

            modelBuilder.Entity("NewsApp.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"), 1L, 1);

                    b.Property<int>("ArticleID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.HasIndex("ArticleID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("NewsApp.Models.SavedArticle", b =>
                {
                    b.Property<int>("SavedArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SavedArticleID"), 1L, 1);

                    b.Property<int>("ArticleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SavedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("SavedArticleID");

                    b.HasIndex("ArticleID");

                    b.HasIndex("UserID");

                    b.ToTable("SavedArticles");
                });

            modelBuilder.Entity("NewsApp.Models.ShareData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArticleID")
                        .HasColumnType("int");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShareDatas");
                });

            modelBuilder.Entity("NewsApp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OAuthID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OAuthToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Password_Hashkey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NewsApp.Models.UserPreference", b =>
                {
                    b.Property<int>("UserPreferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPreferenceID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("preference")
                        .HasColumnType("int");

                    b.HasKey("UserPreferenceID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("UserID");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("NewsApp.Models.ArticleCategory", b =>
                {
                    b.HasOne("NewsApp.Models.Article", "Article")
                        .WithMany("ArticleCategories")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsApp.Models.Category", "Category")
                        .WithMany("ArticleCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NewsApp.Models.Comment", b =>
                {
                    b.HasOne("NewsApp.Models.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsApp.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewsApp.Models.SavedArticle", b =>
                {
                    b.HasOne("NewsApp.Models.Article", "Article")
                        .WithMany("SavedArticles")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NewsApp.Models.User", "User")
                        .WithMany("SavedArticles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewsApp.Models.UserPreference", b =>
                {
                    b.HasOne("NewsApp.Models.Category", "Category")
                        .WithMany("UserPreferences")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsApp.Models.User", "User")
                        .WithMany("UserPreferences")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewsApp.Models.Article", b =>
                {
                    b.Navigation("ArticleCategories");

                    b.Navigation("Comments");

                    b.Navigation("SavedArticles");
                });

            modelBuilder.Entity("NewsApp.Models.Category", b =>
                {
                    b.Navigation("ArticleCategories");

                    b.Navigation("UserPreferences");
                });

            modelBuilder.Entity("NewsApp.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("SavedArticles");

                    b.Navigation("UserPreferences");
                });
#pragma warning restore 612, 618
        }
    }
}
